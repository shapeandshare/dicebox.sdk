[DATASET]
name = mnist_train
dicebox_compliant = True
image_width = 28
image_height = 28
categories = 10

[TAXONOMY]
min_neurons = 1
max_neurons = 1597
min_layers = 1
max_layers = 21
layer_types: ["dropout", "dense"]
activation: ["softmax", "elu", "softplus", "softsign", "relu", "tanh", "sigmoid", "hard_sigmoid", "linear"]
optimizer: ["rmsprop", "adam", "sgd", "adagrad", "adadelta", "adamax", "nadam"]

[LONESTAR]
neurons = 1597
layers = 2
activation = relu
optimizer = nadam

[EVOLUTION]
epochs = 10000
generations = 100
population = 50

[TRAINING]
batch_size = 100
train_batch_size = 1000
test_batch_size = 100
load_best_weights_on_start = False

[DIRECTORY]
dataset_base_directory = /Users/josh.burt/Workbench/Repositories/dicebox.sdk/projects/mnist
logs_dir = /Users/josh.burt/Workbench/Repositories/dicebox.sdk/projects/mnist/log
weights_dir = /Users/josh.burt/Workbench/Repositories/dicebox.sdk/projects/mnist/weights
tmp_dir = /Users/josh.burt/Workbench/Repositories/dicebox.sdk/projects/mnist/tmp

[SERVER]
api_access_key = 9b2b6be0-2397-414d-8882-da9d53cd285e
api_version = 0.4.0
listening_host = 0.0.0.0
flask_debug = False
model_weights_filename = weights.best.hdf5

[SENSORY_SERVICE]
rabbitmq_uri = amqp://
sensory_uri = http://
sensory_server = localhost
sensory_port = 8002
rabbitmq_exchange = sensory.exchange
rabbitmq_batch_request_routing_key = task_queue
rabbitmq_batch_request_task_queue = sensory.batch.request.task.queue

rabbitmq_username = sensory_service
rabbitmq_password = sensory_service!123
rabbitmq_server = localhost
rabbitmq_port = 5672
rabbitmq_vhost = sensory
shard_size = 5000

[TRAINING_SERVICE]
rabbitmq_uri = amqp://
rabbitmq_port = 5672
rabbitmq_server = localhost
rabbitmq_username = training_service
rabbitmq_password = training_service!123
rabbitmq_vhost = training
rabbitmq_exchange = training.exchange
rabbitmq_batch_request_routing_key = task_queue
rabbitmq_train_request_task_queue = train.request.task.queue

[TRAINING_PROCESSOR_SERVICE]
rabbitmq_uri = amqp://
rabbitmq_port = 5672
rabbitmq_server = localhost
rabbitmq_username = training_processor_service
rabbitmq_password = training_processor_service!123
rabbitmq_vhost = training
rabbitmq_exchange = training.exchange
rabbitmq_batch_request_routing_key = task_queue
rabbitmq_train_request_task_queue = train.request.task.queue

[GLOBAL]
noise = 0.0

[CLIENT]
classification_server = localhost
classification_port = 5000
classification_uri = http://



